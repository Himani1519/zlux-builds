name: "create release"
description: "This action help in creating release"
inputs:
  github-user:
    description: 'github user'
    required: false
  github-password:
    description: 'github password'
    required: false
  github-email:
    description: 'github email'
    required: false
  tag-name:
    description: 'assign tag'
    required: true


runs:
  using: "composite"
  steps:
    - name: 'process env vars'
      run: |
        # Sanitize envvars by (in order)
        # 1. remove comments (start with #); 
        # 2. remove blank lines
        sed '/^#/d' envvars.env | awk NF > envvars.env.new
        rm envvars.env
        mv envvars.env.new envvars.env
        cat envvars.env >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}
      shell: bash

    - name: 'make release'
      run: | 
        for repo in $REPOS
        do
          if [${repo} = 'zowe-common-c']
          then
             curl --location --request POST 'https://api.github.com/repos/$GITHUB_PROJECT/zowe-common-c/releases' \
            --header 'Authentication:${{ secrets.GITHUB_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
            "tag_name": "zss-${input.tag-name}",
            "target_commitish": "${RELEASE_BRANCH}",
            "name": "zss ${input.tag-name}",
            "body": "",
            "draft": false,
            "prerelease": false
          }'
          else
          curl --location --request POST 'https://api.github.com/repos/$GITHUB_PROJECT/${repo}/releases' \
          --header 'Authentication:${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "tag_name": "${input.tag-name}",
          "target_commitish": "${RELEASE_BRANCH}",
          "name": "${input.tag-name}",
          "body": "",
          "draft": false, 
          "prerelease": false
         }'
         fi
        done
      shell: bash
